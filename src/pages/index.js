import Head from 'next/head';
import Image from 'next/image';
import PocketBase from 'pocketbase';
import React,{ useState,useEffect } from 'react';
import Modal from 'components/Modal.js';
import { Righteous } from "@next/font/google";
import { SERVER_DATA } from 'lib/serverConfig';

const FONT_STYLE = Righteous({subsets: ["latin"],weight: "400"})
const pb = new PocketBase(SERVER_DATA);

export default function Home({data}) {
  const [ImagePBData,setImagePBData] = useState([...data]);

  useEffect(() => {
    const unsubscribe = () => pb.collection('supremecommandermaps').subscribe('*', async ({ action, record }) => {
      if (action === 'create') {
        const image_url = pb.getFileUrl(record, record.map_img);
        const download_url = pb.getFileUrl(record,record.map_zip);
        setImagePBData((prevImagePBData) => [{ ...record, file_url: image_url,download_url: download_url },...prevImagePBData,]);
      }
    });

    return () => {
      unsubscribe();
    };
  }, []);
  return (
    <>
      <Head>
        <title>Generatore Mappe Supreme Commander Forged Alliance</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="referrer" content="no-referrer" />
      </Head>
      <h1 className={`${FONT_STYLE.className} text-[#F58A07] text-3xl text-center`}>SUPREME COMMANDER FORGED ALLIANCE MAPS GENERATOR</h1>
      <Modal />
      <div className="max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8">
      <div className="grid grid-cols-1 gap-y-10 gap-x-6 lg:grid-cols-2 xl:grid-cols-3 xl:gap-x-8">
      {ImagePBData.map((file)=>
        <BlurImage key={file.map_id} image={file} />
      )}
      </div>
    </div>
    </>
  )
}

function cn(...classes) {
  return classes.filter(Boolean).join(' ');
}
 
function BlurImage({image}) {
  const [isLoading, setLoading] = useState(true);
  return (
    <a href={image.download_url} className="group">
      <div className="w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8">
        <Image
          alt={image.map_name}
          src={image.file_url}
          fill
          style={{objectFit:"fill"}}
          sizes="(max-width: 768px) 100vw,
          (max-width: 1200px) 50vw,
          33vw"
          className={cn(
            'group-hover:opacity-75 duration-700 ease-in-out',
            isLoading
              ? 'grayscale blur-2xl scale-110'
              : 'grayscale-0 blur-0 scale-100'
          )}
          onLoadingComplete={() => setLoading(false)}
        />
      </div>
      <p className="mt-1 text-sm font-medium text-[#F7F5FB] text-center">{image.map_name}</p>
      <p className="mt-1 text-sm font-medium text-[#F7F5FB] text-center">Giocatori : {image.giocatori || "Gurda Immagine"}</p>
    </a>
  );
}

export async function getServerSideProps(){
    const records = await pb.collection('supremecommandermaps').getFullList(200, {
      sort: '-created',
      $autoCancel: false,
    });
    const updatedRecords = records.map((record) => {
      const image_url = pb.getFileUrl(record, record.map_img);
      const download_url = pb.getFileUrl(record,record.map_zip);
      return { ...record, file_url: image_url,download_url: download_url };
    });
  return {
    props: {data: JSON.parse(JSON.stringify(updatedRecords))}
  }
}
